from typing import List
from random import randint
from datetime import datetime

from pydantic import BaseModel, Field


class Address(BaseModel):
    """
        Address Schema
    """
    id: int = Field(..., gt=0)
    user_id: int = Field(..., gt=0)
    first_name: str = Field(..., min_length=2, max_length=64)
    last_name: str = Field(..., min_length=2, max_length=64)
    mobile: str = Field(..., min_length=11, max_length=11)
    phone_number: str = Field("", max_length=11)
    email: str = Field("", max_length=128)
    province: str = Field(..., min_length=2, max_length=64)
    city: str = Field(..., min_length=2, max_length=64)
    details: str = Field("", max_length=512)
    zip_code: str = Field(..., min_length=10, max_length=10)

    class Config:
        """
            Configuration
        """
        schema_extra = {
            "example": {
                "id": randint(1, 100),
                "user_id": randint(1, 100),
                "first_name": "نام",
                "last_name": "نام خانوادگی",
                "mobile": "09123456789",
                "phone_number": "02131234567",
                "email": "youremail@gmail.com",
                "province": "تهران",
                "city": "تهران",
                "details": "خیابان ...",
                "zip_code": "1234567890"
            }
        }


class UserBase(BaseModel):
    mobile: str = Field(..., min_length=11, max_length=11)


class UserAuth(UserBase):
    password: str = Field(..., min_length=6, max_length=16)

    class Config:
        schema_extra = {
            "example": {
                "mobile": "user@gmail.com",
                "password": "123456"
            }
        }


class UserDB(BaseModel):
    # AutoGenerated ID
    id: int = Field(..., gt=0)
    # UserInput
    mobile: str = Field(..., min_length=11, max_length=11)
    email: str = Field("", max_length=128)
    security: str
    # UserType ~    SuperAdmin  CLient
    user_type: str = Field("CL", min_length=2, max_length=2)
    # Defaults
    cart_index: str = Field(..., min_length=8, max_length=8)
    address: List[int] = []
    favorites: List[int] = []
    comments: List[int] = []
    invoices: List[int] = []
    # Optionals
    first_name: str = Field("", max_length=64)
    last_name: str = Field("", max_length=64)
    # views: List[str] = []
    score: int = Field(0, ge=0)
    credit: int = Field(0, ge=0)

    class Config:
        schema_extra = {
            "example": {
                "id": 1,
                "mobile": "09123456789",
                "email": "user@gmail.com",
                "security": "bf198d177a45fd0b211eadcebeec69ce65fe71a8084e23d768ad3bd2df6d914b",
                "user_type": "CL",
                "first_name": "",
                "last_name": "",
                "cart_index": "random_key",
                "address": [],
                "favorites": [],
                "comments": [],
                "invoices": [],
                # "views": [],
                "score": 0,
                "credit": 0,
                # "birthdate": datetime(1990, 1, 1, 0, 0, 0, 0),
            }
        }
